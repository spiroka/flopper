[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/lava_pattern.png" type="Texture" id=1]
[ext_resource path="res://assets/lava.png" type="Texture" id=2]
[ext_resource path="res://scripts/Lava.gd" type="Script" id=3]

[sub_resource type="Shader" id=1]

code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D pattern : hint_albedo;

void fragment() {
	vec2 realUV = UV / SCREEN_PIXEL_SIZE.x;
	vec2 patternUV = realUV / (vec2(textureSize(pattern, 0)) / TEXTURE_PIXEL_SIZE);
	patternUV.y += fract(TIME);
	COLOR = texture(pattern, fract(patternUV));
	if (realUV.y < 8000.0 && COLOR.a > 0.0) {
		COLOR.a *= realUV.y / 8000.0;
	}
}"
_sections_unfolded = [ "Resource" ]

[sub_resource type="ShaderMaterial" id=2]

render_priority = 0
shader = SubResource( 1 )
shader_param/pattern = ExtResource( 1 )
_sections_unfolded = [ "shader_param" ]

[node name="Lava" type="Polygon2D" index="0"]

material = SubResource( 2 )
position = Vector2( 0, 683.898 )
polygon = PoolVector2Array( 605.077, 1.70282, -3.04034, 1.70282, -3.04034, 1176.1, 607.867, 1176.1 )
uv = PoolVector2Array(  )
color = Color( 1, 1, 1, 1 )
vertex_colors = PoolColorArray(  )
offset = Vector2( 0, 0 )
antialiased = false
texture = ExtResource( 2 )
texture_offset = Vector2( 0, 0 )
texture_scale = Vector2( 1, 1 )
texture_rotation_degrees = 0.0
invert_enable = false
invert_border = 100.0
script = ExtResource( 3 )
_sections_unfolded = [ "Material", "Transform", "Z Index" ]


